description "Starphleet Main, emits the pulse signal"

emits starphleet_pulse

respawn

script
  #keep on going
  while [ 1 ]
  do
    #if we are on EC2, install the self update job
    if curl "http://169.254.169.254/latest/user-data/" --silent --connect-timeout 1 > /dev/null; then
      starphleet-headquarters $(curl "http://169.254.169.254/latest/user-data/" --silent | jq --raw-output '.STARPHLEET_HEADQUARTERS')
      test -d /var/starphleet/private_keys || mkdir -p /var/starphleet/private_keys
      curl "http://169.254.169.254/latest/user-data/" --silent \
      | jq --raw-output '.STARPHLEET_PRIVATE_KEY' \
      > /var/starphleet/private_keys/userdata
    fi
    if [ -s "/var/starphleet/.headquarters" ]; then
      source /var/starphleet/.headquarters
      #this pulse drives the system
      initctl emit starphleet_pulse
    else
      echo $(tput setaf 1; tput bold)
      echo "**"
      echo You have no headquarters, add one with
      echo starphleet-headquarters giturl
      echo "**"
      echo $(tput sgr0)
    fi
    sleep 5
  done
end script

post-stop script
  set +e
  source /var/starphleet/.headquarters
  #lose all state on stop, makes testing smoother and less to go wrong
  test -d "${CURRENT_ORDERS}" && rm -rf "${CURRENT_ORDERS}"
  test -d "${HEADQUARTERS_LOCAL}" && rm -rf "${HEADQUARTERS_LOCAL}"
  test -d "${NGINX_CONF}/published" && rm -rf "${NGINX_CONF}/published"
  rm /var/log/upstart/starphleet*
  start starphleet_reaper
end script
