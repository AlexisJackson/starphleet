description "Starphleet autodeploy repositories based on orders"

emits startphleet_serve

instance $order

script

  ORDERS_IN=/var/starphleet/current_orders
  mkdir -p ${ORDERS_IN}
  ORDER=$(python -c "print '${order}'.replace('/var/starphleet/headquarters.git', '')")
  ORDER_REPOSITORY=${ORDERS_IN}/${ORDER}.git

  CHANGE=$(phleet monitor check "${repository}" "${ORDER_REPOSITORY}" | grep CODE100)
  if [ "${CHANGE}" ]; then
   echo ordered repository updated
   phleet monitor update "${repository}" "${ORDER_REPOSITORY}"
   cd "${ORDER_REPOSITORY}"
   CURRENT_SHA=`git log -n 1 --no-merges --pretty=format:%h`
   docker build -t "${CURRENT_SHA}" .
  fi
  cd "${ORDER_REPOSITORY}"
  CURRENT_SHA=`git log -n 1 --no-merges --pretty=format:%h`
  SERVICE="${ORDER}-${CURRENT_SHA}"
  #and fire off a start every time, this is a keepalive via upstart
  #the container is named from the order and the sha, since you can order the
  #same service multiple times
  initctl start starphleet_serve service="${SERVICE}" image="${CURRENT_SHA}"

end script
