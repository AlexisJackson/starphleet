description "Starphleet monitor a local clone of a remote repository"

instance $local
#also needs
# - $local: clone into this directory
# - $remote: git url to clone from and monitor
# - $emit: this is the event that will fire each pulse
# emits the event ${emit}
# - $local
# - $remote
# - $sha: current version at the tip

script
  source /var/starphleet/.headquarters
  REMOTE=$(echo "${remote}" | awk -F '#' '{print $1;}')
  BRANCH=$(echo "${remote}" | awk -F '#' '{print $2;}')
  changes () {
    get_CURRENT_SHA "${local}"
    initctl emit ${emit} local="${local}" remote="${remote}" sha="${CURRENT_SHA}"
    exit 0
  }
  if [ -d "${local}" ]; then
    cd "${local}"
    #make sure we have the correct repository and branch
    ORIGIN_URL=`git config remote.origin.url`
    if [ "${ORIGIN_URL}" != "${REMOTE}" ]; then
      warn repository url differs, reclone needed
      cd ..
      rm -rf "${local}"
      starphleet-git clone "${REMOTE}" "${local}"
      changes
    fi
    CURRENT_BRANCH=`git rev-parse --symbolic-full-name --abbrev-ref HEAD`
    if [ -n "${BRANCH}" ]; then
      if [ "${BRANCH}" != "${CURRENT_BRANCH}" ]; then
        warn specified branch changed, checkout out ${BRANCH}
        git checkout "${BRANCH}"
        changes
      fi
    fi
    CURRENT_BRANCH=`git rev-parse --symbolic-full-name --abbrev-ref HEAD`
    starphleet-git fetch --all || fatal fetch error
    HAS_CHANGES=`git diff HEAD...origin/${CURRENT_BRANCH} --raw`
    if [ "${HAS_CHANGES}x" != "x" ]; then
      warn new code detected, pulling
      starphleet-git pull
      changes
    fi
  else
    warn ${local} not found, initial clone needed
    starphleet-git clone "${REMOTE}" "${local}"
    cd "${local}"
    if [ -n "${BRANCH}" ]; then
      git checkout "${BRANCH}"
    fi
    changes
  fi
end script
