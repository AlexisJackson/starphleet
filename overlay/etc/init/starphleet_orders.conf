description "An individual ordered repository needs to be served"

setuid admiral
start on starphleet_orders
stop on stopping starphleet

instance $local

respawn

pre-start script
  date
  source /var/starphleet/.headquarters
  #make sure we have the needed docker container images built to serve
  #the image will be tagged with the SHA of the repository but don't
  #get them confused with the SHA that Docker makes for the resulting image
  get_CURRENT_SHA "${local}"
  #build the image starting from our clone
  cd "${local}"
  pwd
  docker images | grep ${CURRENT_SHA} > .exist || true
  if [ -s .exist ]; then
    echo image is already available
  else
    docker build -t ${CURRENT_SHA} "${local}"
    #docker build exits 0 even when it fails. bummer
    docker images | grep ${CURRENT_SHA} > .exist || true
    if [ -s .exist ]; then
      echo image built
    else
      echo image failed
      exit 1
    fi
  fi
end script

script
  echo starting container
  source /var/starphleet/.headquarters
  #run at the current SHA
  get_CURRENT_SHA "${local}"
  #the monitoring triggered in the git repository, so we need to go up a level
  #to write out the cid file
  cd "${local}/.."
  ORDER=$(pwd)
  SHORT_ORDER=$(basename "${ORDER}")
  #count on upstart to be the daemon manager, not docker, tracking the running
  #docker container by the SHA, but with a tiny bit of a friendly name so
  #that initctl list doesn't just have a pile of SHAs in there
  sudo start starphleet_serve_order name="${SHORT_ORDER}:${CURRENT_SHA}" image="${CURRENT_SHA}" order="${ORDER}"
end script

