description "Grant access to ssh in as admiral@ship to a set of public keys in the headquarters"

start on starphleet_headquarters_orders

script
  source /var/starphleet/.headquarters
  #grant The Admiral access
  # the auth keys are reset everytime
  # this means if any keys have been manually added to the account, they will be overwritten
  # When there are no authkeys in the HQ repo, no ssh access is left around
  ADMIRALSSH="${ADMIRAL_HOME}/.ssh"
  AUTHFILE="${ADMIRALSSH}/authorized_keys"
  test -f "${AUTHFILE}"  && rm "${AUTHFILE}"
  gitreceive reset
  sshcommand reset serve
  sshcommand reset destroy

  # look for some auth keys in the HQ repo, when found add them all to the ssh auth keys to allow ssh access
  HQAUTHKEYS="${HEADQUARTERS_LOCAL}/authorized_keys"
  if [ -d "${HQAUTHKEYS}" ]; then
    # base touch on auth file to create
    touch ${AUTHFILE}
    for f in $(find "${HQAUTHKEYS}")
    do
      if ssh-keygen -l -f "${f}" > /dev/null; then
        info granting to ${f}
        #direct ssh as the admiral
        cat "${f}" >> ${AUTHFILE}
        #git push based build/serve sequence, much like a manual
        #interactive heroku style
        cat "${f}" | gitreceive upload-key $(basename "${f}")
        cat "${f}" | sshcommand acl-add serve $(basename "${f}")
        cat "${f}" | sshcommand acl-add destroy $(basename "${f}")
      fi
    done

    chmod 600 ${AUTHFILE}
    chown ${ADMIRAL}:${ADMIRAL} ${AUTHFILE}
  fi

end script
