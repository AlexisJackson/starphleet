#!/usr/bin/env bash
source `which tools`

info "building ${name}"

ORDER_LOCAL="${HEADQUARTERS_LOCAL}/${order}/git"
STATUS_FILE="${CURRENT_ORDERS}/${order}/.starphleetstatus.${name}"

run_orders "${HEADQUARTERS_LOCAL}/${order}/orders"

#pre stop if the service demands it
if [ "${STOP_BEFORE_AUTODEPLOY}" == "1" ]; then
  info stopping before autodeploy
  starphleet-reaper "${name}" "${order}" --force
fi

LAST_KNOWN_GOOD_CONTAINER=$(cat "${CURRENT_ORDERS}/${order}/.last_known_good_container" || true)
# this will give us the container name of the LKG ONLY IF the system has the
# container
DO_WE_HAVE_THE_LKG=$(lxc-ls | grep "^${LAST_KNOWN_GOOD_CONTAINER}$" || true)

# this 'use existing container' step is simply for optimizing restart of the
# LAST container we used, so we check to see if we're being asked to use the
# LKG and that we do indeed HAVE the LKG
if [ "${name}" == "${LAST_KNOWN_GOOD_CONTAINER}" -a "${name}" == "${DO_WE_HAVE_THE_LKG}" ]; then
  warn "using existing container ${name}"
  lxc-start --name ${name} -d
  starphleet-lxc-wait ${name} RUNNING
  lxc-attach --name ${name} -- bash starphleet-wait-network
  if dev_mode && [ ! -z ${DEVMODE_UNBIND_GIT_DIR} ]; then
    lxc-attach --name ${name} -- bash -c "rsync -rlKt '/var/git/${order}/' /home/ubuntu/app/"
  fi
else
  warn "creating a new container"
  #starting up the build
  echo 'building' > "${STATUS_FILE}"
  starphleet-lxc-destroy "${name}"
  #build a container, this will recycle any existing container, only building
  #when things are 'new', with a default for said URL to be nothing
  starphleet-containerize "${SERVICE_GIT_URL:--}" "${name}" "${HEADQUARTERS_LOCAL}/${order}" \
  || (echo 'building failed' > "${STATUS_FILE}" && exit 1)
fi

info "starting ${name}"
ORDER_LOCAL="${HEADQUARTERS_LOCAL}/${order}/git"
run_orders "${HEADQUARTERS_LOCAL}/${order}/orders"
info "using orders ${order}"
STATUS_FILE="${CURRENT_ORDERS}/${order}/.starphleetstatus.${name}"
if [ "${UNPUBLISHED}" == "1" ]; then
  # this needs to be switched to a worker process
  # starphleet_unpublished_worker
  lxc-attach --name ${name} -- sudo -H -u ${STARPHLEET_APP_USER} bash -c "2>&1 sleep 1000000" | logger -t "${order}" || mail_log
else
  # default to 1 worker if not otherwise specified
  info web worker count ${WEB_WORKERS=1}
  # we ant to start our worker number at 0 just to make the port arithmetic and assignment
  # straight-forward PORT + 0 always equals PORT.
  for worker_number in $(seq 0 $((${WEB_WORKERS} - 1)))
  do
    WORKER_PORT=$((${PORT:=3000} + ${worker_number}))
    info worker port ${WORKER_PORT}
    start starphleet_web_worker name=${name} order=${order} port=${WORKER_PORT}
  done
fi
echo 'stopped' > "${STATUS_FILE}"
