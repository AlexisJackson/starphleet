#! /usr/bin/env bash
DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
source ${DIR}/tools
set -e

## monitor 0.1.0
### Usage:
###    monitor check <url> <directory>
###    monitor update <url> <directory>
### --help
###
### This will *check* a repository at an <url> compared to a local repository
### in <directory> and exit code 100 in any of the following cases:
### * the local has not yet been cloned
### * the local has a different origin <url>
### * the origin has changes to fetch that are not yet merged

help=$(grep "^### " "$0" | cut -c 5-)
version=$(grep "^## "  "$0" | cut -c 4-)
eval "$(${DIR}/docopts -h "$help" -V "$version" : "$@")"

if [ ${check} = "true" ]; then
  if [ -d ${directory} ]; then
    cd "${directory}"
    git rev-parse --git-dir >> /dev/null 2>&1 || fatal $directory is no repo
    FETCH_RESULTS=`git fetch --all` || fatal fetch error
    CURRENT_BRANCH=`git rev-parse --symbolic-full-name --abbrev-ref HEAD`
    CURRENT_SHA=`git log -n 1 --no-merges --pretty=format:%h`
    ORIGIN_URL=`git config remote.origin.url`
    HAS_CHANGES=`git diff HEAD...origin/${CURRENT_BRANCH} --raw`
    if [ "${ORIGIN_URL}" != "${url}" ]; then
      info ${directory} is not from ${url}, recloning
      cd "${DIR}"
      rm -rf "${directory}"
      git clone "${url}" "${directory}"
      warn change
      code 100
    fi
    if [ "${HAS_CHANGES}x" = "x" ]; then
      warn no change
      code 0
    else
      warn change
      code 100
    fi
  else
    info ${directory} not found, initial clone needed
    git clone "${url}" "${directory}"
    warn change
    code 100
  fi
fi

if [ ${update} = "true" ]; then
  if [ -d ${directory} ]; then
    pushd "${directory}"
    git rev-parse --git-dir >> /dev/null 2>&1 || fatal $directory is no repo
    CURRENT_BRANCH=`git rev-parse --symbolic-full-name --abbrev-ref HEAD`
    HAS_CHANGES=`git diff HEAD...origin/${CURRENT_BRANCH} --raw`
    if [ "${HAS_CHANGES}x" = "x" ]; then
      warn no change
      exit 0
    else
      warn change
      git reset --hard origin/${CURRENT_BRANCH}
      exit 100
    fi
  else
    fatal ${directory} not found
  fi
fi

