#!/usr/bin/env bash
### Usage:
###    starphleet-install
### --help
###
### This will get starphleet on a base machine
DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
source ${DIR}/tools
help=$(grep "^### " "$0" | cut -c 5-)
eval "$(${DIR}/docopts -h "$help" -V "$version" : "$@")"

#this is a provisioning script for the base system/host/vm
#run as root, with the starphleet source tree at /starphleet

#yep -- international, no fooling
echo "GMT" > /etc/timezone
dpkg-reconfigure -f noninteractive tzdata

hostname "${SHIP}"
echo "${SHIP}" > /etc/hostname
echo "127.0.0.1 ${SHIP} localhost" > /etc/hosts

#put in the system overlay, gets all the files in place
#for the starphleet jobs
rm /etc/init/starphleet*
cp -R ${DIR}/../overlay/* /

if [ -f /var/starphleet/.system ]; then
  info base apt packages already installed
  warn delete /var/starphleet/.system to force reinstall
else
  apt-get -y update
  apt-get -y install --force-yes software-properties-common
  add-apt-repository -y ppa:nginx/stable
  add-apt-repository -y ppa:chris-lea/node.js
  apt-get -y update
  for package in $(cat "${DIR}/packages"); do
    apt-get -y install --force-yes ${package}
  done

  #initial apt package has nginx running. lame.
  /etc/init.d/nginx stop
  if find /etc/rc* | grep nginx; then
    find /etc/rc* | grep nginx | xargs rm
  fi

  #we will be using bash. period
  rm /bin/sh
  ln /bin/bash /bin/sh

  #aws command line tools anyone, the non java ones...
  pip install awscli
fi

#starphleet lives here
test -d ${STARPHLEET_ROOT} || mkdir -p ${STARPHLEET_ROOT}
chmod 755 ${STARPHLEET_ROOT}
test -d ${STARPHLEET_ROOT}/diagnostic || mkdir -p ${STARPHLEET_ROOT}/diagnostic
chmod 755 ${STARPHLEET_ROOT}/diagnostic

npm ${NPM_FLAGS} install -g coffee-script
npm ${NPM_FLAGS} install -g "${TAILOR_REMOTE}"
npm ${NPM_FLAGS} install -g "${DASHBOARD_REMOTE}"

#starphleet and all of its scripts
pushd "${DIR}/.."
npm ${NPM_FLAGS} install -g
popd

#make a place for keys
test -d ${PRIVATE_KEYS} || mkdir -p ${PRIVATE_KEYS}
chmod 755 ${PRIVATE_KEYS}
test -d ${PUBLIC_KEYS} || mkdir -p ${PUBLIC_KEYS}
chmod 755 ${PUBLIC_KEYS}

#role account for folks acting as the admiral
make_admiral

#role account for git push manual deployment
gitreceive init
adduser git sudo

#role account to serve orders by hand
sshcommand create update "sudo starphleet-update"
adduser update sudo


start starphleet

touch /var/starphleet/.system
announce *Welcome to Starphleet*
