#!/usr/bin/env bash
### Usage:
###    starphleet-is-current <container_name>
### --help
###
### Given a container name, figure out if it is the most current version, use
### this info to figure out what to queue up for reaping.
DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
source ${DIR}/tools
help=$(grep "^### " "$0" | cut -c 5-)
eval "$(${DIR}/docopts -h "$help" -V "$version" : "$@")"

#this will make an implicit fail if we can't find the orders, which will serve
#to deal with orders being deleted:w
set -e

#strip of the two shas and .orders 8 + 8 + 7
ORDER=$(urldecode $(echo "${container_name}" | awk '{print substr($0,1,length($0)-23)}'))
ORDER_AT="${CURRENT_ORDERS}/${ORDER}"
TAIL=$(echo "${container_name}" | awk '{print substr($0,length($0)-21)}')

#the order itself must be the current version
CONTAINER_ORDERS_SHA=$(echo "${TAIL}" | awk 'BEGIN {FS=".";} {print $1;}')
get_SHASUM "${ORDER_AT}/orders"
ORDERS_SHA=${SHASUM}
if [ "${ORDERS_SHA}" != "${CONTAINER_ORDERS_SHA}" ]; then
  warn ${container_name} is no longer current order ${ORDERS_SHA} ${CONTAINER_ORDERS_SHA}
  exit 1
fi

#code itself must be the current version
ORDER_CODE_SHA=$(echo "${TAIL}" | awk 'BEGIN {FS=".";} {print $2;}')
get_CURRENT_SHA "${ORDER_AT}/git"
if [ "${ORDER_CODE_SHA}" != "${CURRENT_SHA}" ]; then
  warn ${container_name} is no longer current code ${ORDER_CODE_SHA} ${CURRENT_SHA}
  exit 1
fi




