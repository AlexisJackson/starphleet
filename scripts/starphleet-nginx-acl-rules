#!/usr/bin/env starphleet-launcher
### Usage:
###    starphleet-nginx-acl-rules
### --help
###
### Generate all ACL Rules for NGINX
###

die_on_error
run_as_root_or_die

#******************************************************************
# Configuration
#******************************************************************

DIR_NGINX_ACL_RULES="${NGINX_CONF}/acl_rules"
DIR_NGINX_PUBLISHED="${NGINX_CONF}/published"

#******************************************************************
# Main
#******************************************************************

# We purge everything each run and start over
[ -d "${DIR_NGINX_ACL_RULES}" ]  && rm -rf "${DIR_NGINX_ACL_RULES}"
rm "${DIR_NGINX_PUBLISHED}"/*.acl || true

# Make sure our dirs work
mkdir -p "${DIR_NGINX_ACL_RULES}"
mkdir -p "${DIR_NGINX_PUBLISHED}"

# Go through all Access Control List files (*.acl)
for FILE_ORDERS in $(find ${HEADQUARTERS_LOCAL} -type f -name "orders"); do
  # Yoink the HQ Path off
  SERVICE=$(echo ${FILE_ORDERS#${HEADQUARTERS_LOCAL}/})
  # Yoink the file name for theFILE_ACL_LIST
  SERVICE=$(echo ${SERVICE} | sed -e "s/$(basename ${FILE_ORDERS})//")
  # Yoink the trailing slash
  SERVICE=${SERVICE::-1}
  # The file with our rules for this service
  FILE_ACL_RULES_MAP="${DIR_NGINX_ACL_RULES}/${SERVICE}.conf"
  FILE_ACL_RULES_CONF="${DIR_NGINX_PUBLISHED}/${SERVICE}.acl"
  # Only create files if necessary by checking if the orders dir has any ACL files
  # piping error to dev null since it's normal for acl files to not exist
  if [ "$(ls $(dirname ${FILE_ORDERS})/*.acl) 2> /dev/null" ]; then
    # Create the map file and make the default 0
    echo "  map \$remote_user \$starphleet_acl_${SERVICE} {" > "${FILE_ACL_RULES_MAP}"
    echo "   default 0;" >> "${FILE_ACL_RULES_MAP}"
  fi
  # Now go through every ACL file and append the users to a map
  for FILE_ACL_LIST in $(find $(dirname ${FILE_ORDERS}) -type f -name "*.acl"); do
    # Add all the users from this file to the map
    for ACL_USERNAME in $(cat "${FILE_ACL_LIST}"); do
      echo "   ${ACL_USERNAME} 1;" >> "${FILE_ACL_RULES_MAP}"
    done

    # Now we actually publish the rule for the map
    # note - it's okay if this runs more than once
    echo "  if (\$starphleet_acl_${SERVICE} != 1) {" > "${FILE_ACL_RULES_CONF}"
    echo "    rewrite ^/${SERVICE}/(.*) /autherror last;" >> "${FILE_ACL_RULES_CONF}"
    echo "  }" >> "${FILE_ACL_RULES_CONF}"
  done
  # Now, if there were ACL files we need to close up the map file
  if [ "$(ls $(dirname ${FILE_ORDERS})/*.acl) 2> /dev/null" ]; then
    echo "  }" >> "${FILE_ACL_RULES_MAP}"
  fi
done

starphleet-hup-nginx
