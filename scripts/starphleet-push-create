#!/usr/bin/env bash
### Usage:
###    starphleet-push-create <local_repo> <container_name>
### --help
###
### Create a container from a local repository, used from a post push hook.
DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
source ${DIR}/tools
help=$(grep "^### " "$0" | cut -c 5-)
eval "$(${DIR}/docopts -h "$help" -V "$version" : "$@")"

function clean_up {
  info cleaning up
  starphleet-unpublish "/${container_name}"
  starphleet-lxc-destroy "${container_name}"
  rm -rf "${local_repo}"
  info bye!
  exit
}

trap clean_up HUP INT TERM EXIT


function top_level_parent_pid {
    # Look up the parent of the given PID.
    pid=${1:-$$}
    stat=($(</proc/${pid}/stat))
    ppid=${stat[3]}
    pname=${stat[1]}

    # /sbin/init always has a PID of 1, so if you reach that, the current PID is
    # the top-level parent. Otherwise, keep looking.
    if [[ ${ppid} -ne 1 ]] ; then
      top_level_parent_pid ${ppid}
    fi
}

info making "${local_repo}" into container "${container_name}"
test -f "${local_repo}/.env" && source "${local_repo}/.env"
test -f "${HEADQUARTERS_ENV}" && source "${HEADQUARTERS_ENV}"
info cleaning up existing push container
starphleet-lxc-destroy "${container_name}"
info making this push into a container
starphleet-containerize "${local_repo}" "${container_name}"
info PORT is ${PORT}
starphleet-publish "${container_name}" "${PORT}" "/${container_name}"
info starting your pushed container
lxc-attach --name ${container_name} -- /web &
while [ 1 ]; do
  sleep 1
  top_level_parent_pid
  if [ ${pname} != '(sshd)' ]; then
    exit 0
  fi
done
